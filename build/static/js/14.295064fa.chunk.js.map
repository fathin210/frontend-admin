{"version":3,"sources":["api/api.js","controller/Auth/AuthController.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","views/pages/login/Login.js"],"names":["axios","create","baseURL","AuthController","login","data","event","history","preventDefault","post","then","res","localStorage","setItem","access_token","push","catch","e","toast","error","response","meta","message","profile","api","get","headers","Authorization","getItem","logout","clear","cilLockLocked","Login","useHistory","authController","form","setForm","useState","username","password","useEffect","className","md","onSubmit","icon","cilUser","placeholder","value","onChange","target","autoComplete","type","color","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"mappings":"6KAAA,sBAEeA,QAAMC,OAAO,CAC1BC,QAAS,2D,iCCHX,0EAIO,MAAMC,EAAgB,cAAD,KAC1BC,MAAQ,CAACC,EAAMC,EAAOC,KACpBD,EAAME,iBACNR,IACGS,KAAK,8DAA+DJ,GACpEK,MAAMC,IACLC,aAAaC,QAAQ,eAAgBF,EAAIN,KAAKS,cAC9CP,EAAQQ,KAAK,QAEdC,OAAOC,IACNC,IAAMC,MAAMF,EAAEG,SAASf,KAAKgB,KAAKC,aAVb,KAc1BC,QAAU,IACDC,IAAIC,IAAI,WAAY,CACzBC,QAAS,CACPC,cAAc,UAAD,OAAYf,aAAagB,QAAQ,oBAjB1B,KAsB1BC,OAAUtB,GACDiB,IACJf,KAAK,UAAW,KAAM,CACrBiB,QAAS,CACPC,cAAc,UAAD,OAAYf,aAAagB,QAAQ,oBAGjDlB,MAAK,KACJE,aAAakB,QACbvB,EAAQQ,KAAK,gB,8ECnCd,MAAMgB,EAAgB,CAAC,UAAU,8Q,uCCiGzBC,UA3ED,KACZ,MAAMzB,EAAU0B,uBACVC,EAAiB,IAAI/B,KACpBgC,EAAMC,GAAWC,mBAAS,CAC/BC,SAAU,GACVC,SAAU,KASZ,OANAC,qBAAU,KACJ5B,aAAagB,QAAQ,iBACvBrB,EAAQQ,KAAK,OAEd,IAGD,qBAAK0B,UAAU,yDAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOE,SAAWrC,GAAU4B,EAAe9B,MAAM+B,EAAM7B,EAAOC,GAA9D,UACE,6CACA,mBAAGkC,UAAU,uBAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOG,KAAMC,QAEf,cAAC,IAAD,CACEC,YAAY,WACZC,MAAOZ,EAAKG,SACZU,SAAW/B,GAAMmB,EAAQ,IAAKD,EAAMG,SAAUrB,EAAEgC,OAAOF,QACvDG,aAAa,gBAGjB,eAAC,IAAD,CAAaT,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOG,KAAMb,MAEf,cAAC,IAAD,CACEoB,KAAK,WACLL,YAAY,WACZI,aAAa,mBACbH,MAAOZ,EAAKI,SACZS,SAAW/B,GAAMmB,EAAQ,IAAKD,EAAMI,SAAUtB,EAAEgC,OAAOF,aAG3D,cAAC,IAAD,UACE,cAAC,IAAD,CAASI,KAAK,SAASC,MAAM,UAAUX,UAAU,4BAAjD,kCAUd,cAAC,IAAD,CACEY,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY","file":"static/js/14.295064fa.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://api-setiakawan.gazebo-skripsi.my.id/api/admin',\n})\n","import axios from 'axios'\nimport { toast } from 'react-toastify'\nimport api from 'src/api/api'\n\nexport class AuthController {\n  login = (data, event, history) => {\n    event.preventDefault()\n    axios\n      .post('https://api-setiakawan.gazebo-skripsi.my.id/api/admin/login', data)\n      .then((res) => {\n        localStorage.setItem('access_token', res.data.access_token)\n        history.push('/')\n      })\n      .catch((e) => {\n        toast.error(e.response.data.meta.message)\n      })\n  }\n\n  profile = () => {\n    return api.get('/profile', {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n      },\n    })\n  }\n\n  logout = (history) => {\n    return api\n      .post('/logout', null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      })\n      .then(() => {\n        localStorage.clear()\n        history.push('/login')\n      })\n  }\n}\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { useEffect } from 'react'\nimport { AuthController } from 'src/controller/Auth/AuthController'\nimport { ToastContainer } from 'react-toastify'\n\nconst Login = () => {\n  const history = useHistory()\n  const authController = new AuthController()\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n  })\n\n  useEffect(() => {\n    if (localStorage.getItem('access_token')) {\n      history.push('/')\n    }\n  }, [])\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={4}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={(event) => authController.login(form, event, history)}>\n                    <h1>Login Admin</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Username\"\n                        value={form.username}\n                        onChange={(e) => setForm({ ...form, username: e.target.value })}\n                        autoComplete=\"username\"\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={form.password}\n                        onChange={(e) => setForm({ ...form, password: e.target.value })}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CButton type=\"submit\" color=\"primary\" className=\"btn btn-lg px-4 btn-block\">\n                        Login\n                      </CButton>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}