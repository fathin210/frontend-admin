{"version":3,"sources":["controller/Pasien/PasienController.js","views/pages/pasien/UbahPasien.js"],"names":["PasienController","fetchPasien","page","dispatch","api","get","headers","Authorization","localStorage","getItem","then","res","type","PASIEN_GET_DATA_SUCCESS","payload","data","catch","error","toast","response","message","detailPasien","PASIEN_DETAIL","searchPasien","insertPasien","history","post","push","nomor_pasien","success","e","deletePasien","id_pasien","window","confirm","delete","UPDATE_PAGE","cetakKartu","open","updatePasien","put","CreatePasienSchema","Yup","shape","nama","required","alamat","jenis_kelamin","no_telepon","min","max","UbahPasien","useDispatch","useParams","validated","setValidated","useState","useHistory","pasien","useSelector","state","detail","pasienController","useEffect","formik","useFormik","initialValues","validationSchema","onSubmit","value","console","log","className","xs","md","handleSubmit","noValidate","gutterY","id","name","values","onChange","handleChange","placeholder","touched","Boolean","errors","invalid","valid","options","label"],"mappings":"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","file":"static/js/20.a7478a85.chunk.js","sourcesContent":["import { toast } from 'react-toastify'\nimport api from 'src/api/api'\nimport { PASIEN_DETAIL, PASIEN_GET_DATA_SUCCESS, UPDATE_PAGE } from 'src/redux/actionTypes'\n\nexport class PasienController {\n  fetchPasien(page) {\n    return (dispatch) => {\n      api\n        .get(`/pasien?page=${page}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n          },\n        })\n        .then((res) => {\n          dispatch({\n            type: PASIEN_GET_DATA_SUCCESS,\n            payload: res.data.data,\n          })\n        })\n        .catch((error) => {\n          toast.error(error.response.data.message)\n        })\n    }\n  }\n\n  detailPasien(data) {\n    return (dispatch) => {\n      api\n        .get(`/pasien/${data}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n          },\n        })\n        .then((res) => {\n          dispatch({\n            type: PASIEN_DETAIL,\n            payload: res.data.data,\n          })\n        })\n    }\n  }\n\n  searchPasien(data) {\n    return (dispatch) => {\n      api\n        .get(`/pasien/cari?search=${data}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n          },\n        })\n        .then((res) => {\n          dispatch({\n            type: PASIEN_GET_DATA_SUCCESS,\n            payload: res.data.data,\n          })\n        })\n        .catch((error) => {\n          toast.error(error.response.data.message)\n        })\n    }\n  }\n\n  insertPasien(data, history) {\n    api\n      .post('/pasien', data, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      })\n      .then((res) => {\n        history.push(`/pasien?nomor_pasien=${res.data.data.nomor_pasien}`)\n        toast.success('Tambah Pasien Sukses')\n      })\n      .catch((e) => {\n        toast.error(e.response.data.message)\n      })\n  }\n\n  deletePasien(id_pasien) {\n    if (window.confirm('Anda yakin ingin menghapus data pasien ?')) {\n      return (dispatch) => {\n        api\n          .delete(`/pasien/${id_pasien}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n            },\n          })\n          .then(() => {\n            dispatch({ type: UPDATE_PAGE })\n            toast.success('Berhasil Menghapus Data Pasien')\n          })\n      }\n    }\n  }\n\n  cetakKartu(id_pasien) {\n    window.open(`https://api-setiakawan.gazebo-skripsi.my.id/api/pasien/cetak/${id_pasien}`)\n  }\n\n  updatePasien(data, history) {\n    api\n      .put(`/pasien/${data.id_pasien}`, data, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      })\n      .then(() => {\n        history.push('/pasien')\n        toast.success('Ubah Data Pasien Sukses')\n      })\n      .catch((e) => {\n        toast.error(e.response.data.message)\n      })\n  }\n}\n","import {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormFeedback,\n  CFormFloating,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport { useFormik } from 'formik'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { PasienController } from 'src/controller/Pasien/PasienController'\nimport * as Yup from 'yup'\n\nconst CreatePasienSchema = Yup.object().shape({\n  nama: Yup.string().required('Field Nama harus diisi!'),\n  alamat: Yup.string().required('Field Alamat harus diisi!'),\n  jenis_kelamin: Yup.string().required('Field Jenis Kelamin harus diisi!'),\n  no_telepon: Yup.number()\n    .min(9999999999, 'Nomor Harus Lebih Dari 10 Karakter')\n    .max(9999999999999, 'Nomor Harus Kurang Dari 13 Karakter')\n    .required('Field Nomor Telepon harus diisi!'),\n})\n\nfunction UbahPasien() {\n  const dispatch = useDispatch()\n  const { id_pasien } = useParams()\n  const [validated, setValidated] = useState(false)\n  const history = useHistory()\n  const pasien = useSelector((state) => state.pasien.detail)\n  const pasienController = new PasienController()\n\n  useEffect(() => {\n    dispatch(pasienController.detailPasien(id_pasien))\n  }, [])\n\n  const formik = useFormik({\n    initialValues: pasien,\n    validationSchema: CreatePasienSchema,\n    onSubmit: (value) => {\n      console.log(value)\n      pasienController.updatePasien(value, history)\n    },\n  })\n\n  return (\n    <CRow className=\"justify-content-center\">\n      <CCol xs={12} md={8}>\n        <CCard>\n          <CCardHeader>Formulir Edit Data Pasien</CCardHeader>\n          <CCardBody>\n            <CForm\n              onSubmit={(e) => {\n                setValidated(true)\n                formik.handleSubmit(e)\n              }}\n              noValidate\n              validated={validated}\n            >\n              <CRow className=\"mb-3\" xs={{ gutterY: 3 }}>\n                <CCol xs={12} md={6}>\n                  <CFormFloating>\n                    <CFormInput\n                      id=\"nama\"\n                      name=\"nama\"\n                      value={formik.values.nama}\n                      onChange={formik.handleChange}\n                      placeholder=\"Nama Pasien\"\n                      required\n                    />\n                    <CFormLabel>Nama Pasien</CFormLabel>\n                    {formik.touched.nama && Boolean(formik.errors.nama) ? (\n                      <CFormFeedback invalid>{formik.errors.nama}</CFormFeedback>\n                    ) : (\n                      <CFormFeedback valid>Nama sudah valid</CFormFeedback>\n                    )}\n                  </CFormFloating>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CFormFloating>\n                    <CFormInput\n                      name=\"alamat\"\n                      placeholder=\"Alamat\"\n                      value={formik.values.alamat}\n                      onChange={formik.handleChange}\n                      required\n                    />\n                    <CFormLabel>Alamat</CFormLabel>\n                    {formik.touched.alamat && Boolean(formik.errors.alamat) ? (\n                      <CFormFeedback invalid>{formik.errors.alamat}</CFormFeedback>\n                    ) : (\n                      <CFormFeedback valid>Alamat sudah valid</CFormFeedback>\n                    )}\n                  </CFormFloating>\n                </CCol>\n              </CRow>\n              <CRow xs={{ gutterY: 3 }}>\n                <CCol xs={12} md={6}>\n                  <CFormFloating>\n                    <CFormSelect\n                      name=\"jenis_kelamin\"\n                      value={formik.values.jenis_kelamin}\n                      onChange={formik.handleChange}\n                      required\n                      options={[\n                        { label: 'Laki-laki', value: 'L' },\n                        { label: 'Perempuan', value: 'P' },\n                      ]}\n                    ></CFormSelect>\n                    <CFormLabel>Jenis Kelamin</CFormLabel>\n                    {formik.touched.jenis_kelamin && Boolean(formik.errors.jenis_kelamin) ? (\n                      <CFormFeedback invalid>{formik.errors.jenis_kelamin}</CFormFeedback>\n                    ) : (\n                      <CFormFeedback valid>Jenis Kelamin sudah valid</CFormFeedback>\n                    )}\n                  </CFormFloating>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CFormFloating className=\"mb-3\">\n                    <CFormInput\n                      name=\"no_telepon\"\n                      type=\"number\"\n                      value={formik.values.no_telepon}\n                      onChange={formik.handleChange}\n                      min={9999999999}\n                      max={9999999999999}\n                      placeholder=\"Nomor Telepon\"\n                      required\n                    />\n                    <CFormLabel>Nomor Telepon</CFormLabel>\n                    {formik.touched.no_telepon && Boolean(formik.errors.no_telepon) ? (\n                      <CFormFeedback invalid>{formik.errors.no_telepon}</CFormFeedback>\n                    ) : (\n                      <CFormFeedback valid>Nomor Telepon sudah valid</CFormFeedback>\n                    )}\n                  </CFormFloating>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n                  <div className=\"d-grid\">\n                    <CButton type=\"submit\">Simpan Data</CButton>\n                  </div>\n                </CCol>\n              </CRow>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default UbahPasien\n"],"sourceRoot":""}