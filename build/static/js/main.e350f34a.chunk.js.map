{"version":3,"sources":["redux/actionTypes.js","App.js","serviceWorker.js","redux/reducers/antrian.js","redux/reducers/booking.js","redux/reducers/update.js","redux/reducers/sidebar.js","redux/reducers/sidebarUnfoldable.js","redux/reducers/pasien.js","redux/reducers/pelayanan.js","redux/reducers/teknisi.js","redux/reducers/tarif.js","redux/store.js","index.js"],"names":["PASIEN_GET_DATA_SUCCESS","PASIEN_DETAIL","UPDATE_PAGE","ANTRIAN_GET_DATA_SUCCESS","ANTRIAN_DETAIL","RINCIAN_DETAIL","ANTRIAN_MODAL_SHOW","ANTRIAN_MODAL_HIDDEN","TARIF_DETAIL","TARIF_GET_DATA_SUCCESS","TARIF_MODAL_SHOW","TARIF_MODAL_HIDDEN","TEKNISI_DETAIL","TEKNISI_GET_DATA_SUCCESS","TEKNISI_MODAL_SHOW","TEKNISI_MODAL_HIDDEN","PELAYANAN_GET_DATA_SUCCESS","BOOKING_GET_DATA_SUCCESS","loading","className","DefaultLayout","React","lazy","Login","App","Component","render","Suspense","fallback","exact","path","name","props","Boolean","window","location","hostname","match","initialState","data","modal","show","antrian","id_pasien","id_admin","nama","tanggal_pelaksanaan","rincian","id_status","id_pelayanan","reducer","state","action","type","payload","update","sidebarShow","rest","sidebarUnfoldable","detail","alamat","jenis_kelamin","no_telepon","nomor_pasien","pendaftaran","id_teknisi","isInsert","id_tarif","tarif_gigi","rootReducers","combineReducers","antrianReducer","booking","bookingReducer","pelayanan","pelayananReducer","updateReducer","sidebarReducer","sidebarUnfoldableReducer","pasien","pasienReducer","teknisi","teknisiReducer","tarif","tarifReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e350f34a.chunk.js","sourcesContent":["//PASIEN\nexport const PASIEN_GET_DATA_SUCCESS = 'PASIEN_GET_DATA_SUCCESS'\nexport const PASIEN_DETAIL = 'PASIEN_DETAIL'\n\n//UPDATE_PAGE\nexport const UPDATE_PAGE = 'UPDATE_PAGE'\n\n//ANTRIAN\nexport const ANTRIAN_GET_DATA_SUCCESS = 'ANTRIAN_GET_DATA_SUCCESS'\nexport const ANTRIAN_DETAIL = 'ANTRIAN_DETAIL'\nexport const RINCIAN_DETAIL = 'RINCIAN_DETAIL'\nexport const ANTRIAN_MODAL_SHOW = 'ANTRIAN_MODAL_SHOW'\nexport const ANTRIAN_MODAL_HIDDEN = 'ANTRIAN_MODAL_HIDDEN'\n\n//TARIF\nexport const TARIF_DETAIL = 'TARIF_DETAIL'\nexport const TARIF_GET_DATA_SUCCESS = 'TARIF_GET_DATA_SUCCESS'\nexport const TARIF_MODAL_SHOW = 'TARIF_MODAL_SHOW'\nexport const TARIF_MODAL_HIDDEN = 'TARIF_MODAL_HIDDEN'\n\n//TEKNISI\nexport const TEKNISI_DETAIL = 'TEKNISI_DETAIL'\nexport const TEKNISI_GET_DATA_SUCCESS = 'TEKNISI_GET_DATA_SUCCESS'\nexport const TEKNISI_MODAL_SHOW = 'TEKNISI_MODAL_SHOW'\nexport const TEKNISI_MODAL_HIDDEN = 'TEKNISI_MODAL_HIDDEN'\n\n//PELAYANAN\nexport const PELAYANAN_GET_DATA_SUCCESS = 'PELAYANAN_GET_DATA_SUCCESS'\n\n//BOOKING\nexport const BOOKING_GET_DATA_SUCCESS = 'BOOKING_GET_DATA_SUCCESS'\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './scss/style.scss'\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./layout/DefaultLayout'))\n\n// Pages\nconst Login = React.lazy(() => import('./views/pages/login/Login'))\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Suspense fallback={loading}>\n          <Switch>\n            <Route exact path=\"/login\" name=\"Login Page\" render={(props) => <Login {...props} />} />\n            <Route path=\"/\" name=\"Home\" render={(props) => <DefaultLayout {...props} />} />\n          </Switch>\n        </React.Suspense>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import {\n  ANTRIAN_DETAIL,\n  ANTRIAN_GET_DATA_SUCCESS,\n  ANTRIAN_MODAL_HIDDEN,\n  ANTRIAN_MODAL_SHOW,\n  RINCIAN_DETAIL,\n} from '../actionTypes'\n\nconst initialState = {\n  data: [],\n  modal: {\n    show: false,\n    antrian: {\n      id_pasien: '',\n      id_admin: '',\n      nama: '',\n      tanggal_pelaksanaan: '',\n    },\n    rincian: {\n      id_status: '',\n      id_pelayanan: '',\n      id_pasien: '',\n      id_admin: '',\n      nama: '',\n      tanggal_pelaksanaan: '',\n    },\n  },\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ANTRIAN_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      }\n    case ANTRIAN_DETAIL:\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          antrian: action.payload,\n        },\n      }\n    case RINCIAN_DETAIL:\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          rincian: action.payload,\n        },\n      }\n    case ANTRIAN_MODAL_SHOW:\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          show: true,\n        },\n      }\n    case ANTRIAN_MODAL_HIDDEN:\n      return {\n        ...state,\n        modal: {\n          ...state.modal,\n          show: false,\n        },\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { BOOKING_GET_DATA_SUCCESS } from '../actionTypes'\n\nconst initialState = {\n  data: [],\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BOOKING_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { UPDATE_PAGE } from '../actionTypes'\n\nconst initialState = {\n  update: false,\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PAGE:\n      return { ...state, update: true }\n    case 'STOP_UPDATE':\n      return { ...state, update: false }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const initialState = {\n  sidebarShow: true,\n}\n\nconst reducer = (state = initialState, { type, ...rest }) => {\n  switch (type) {\n    case 'set':\n      return { ...state, ...rest }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const initialState = {\n  sidebarUnfoldable: false,\n}\n\nconst reducer = (state = initialState, { type, ...rest }) => {\n  switch (type) {\n    case 'set':\n      return { ...state, ...rest }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { PASIEN_DETAIL, PASIEN_GET_DATA_SUCCESS } from '../actionTypes'\n\nconst initialState = {\n  data: [],\n  detail: {\n    id_pasien: '',\n    alamat: '',\n    nama: '',\n    jenis_kelamin: '',\n    no_telepon: '',\n    nomor_pasien: '',\n    pendaftaran: [],\n  },\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PASIEN_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      }\n    case PASIEN_DETAIL:\n      return {\n        ...state,\n        detail: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { PELAYANAN_GET_DATA_SUCCESS } from '../actionTypes'\n\nconst initialState = {\n  data: [],\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PELAYANAN_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import {\n  TEKNISI_DETAIL,\n  TEKNISI_GET_DATA_SUCCESS,\n  TEKNISI_MODAL_HIDDEN,\n  TEKNISI_MODAL_SHOW,\n} from '../actionTypes'\n\nconst initialState = {\n  data: [],\n  detail: {\n    id_teknisi: '',\n    nama: '',\n  },\n  modal: {\n    show: false,\n    isInsert: false,\n  },\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TEKNISI_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      }\n    case TEKNISI_DETAIL:\n      return {\n        ...state,\n        detail: action.payload,\n      }\n    case TEKNISI_MODAL_SHOW:\n      return {\n        ...state,\n        modal: {\n          show: true,\n          isInsert: action.payload,\n        },\n      }\n    case TEKNISI_MODAL_HIDDEN:\n      return {\n        ...state,\n        modal: {\n          show: false,\n          isInsert: false,\n        },\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import {\n  TARIF_DETAIL,\n  TARIF_GET_DATA_SUCCESS,\n  TARIF_MODAL_HIDDEN,\n  TARIF_MODAL_SHOW,\n} from '../actionTypes'\n\nconst initialState = {\n  data: [],\n  detail: {\n    id_tarif: '',\n    tarif_gigi: '',\n  },\n  modal: {\n    show: false,\n    isInsert: false,\n  },\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TARIF_GET_DATA_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      }\n    case TARIF_DETAIL:\n      return {\n        ...state,\n        detail: action.payload,\n      }\n\n    case TARIF_MODAL_SHOW:\n      return {\n        ...state,\n        modal: {\n          show: true,\n          isInsert: action.payload,\n        },\n      }\n    case TARIF_MODAL_HIDDEN:\n      return {\n        ...state,\n        modal: {\n          show: false,\n          isInsert: false,\n        },\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport antrianReducer from './reducers/antrian'\nimport bookingReducer from './reducers/booking'\nimport updateReducer from './reducers/update'\nimport sidebarReducer from './reducers/sidebar'\nimport sidebarUnfoldableReducer from './reducers/sidebarUnfoldable'\nimport pasienReducer from './reducers/pasien'\nimport pelayananReducer from './reducers/pelayanan'\n// import rincianReducer from './reducers/rincian'\nimport teknisiReducer from './reducers/teknisi'\nimport tarifReducer from './reducers/tarif'\nimport thunk from 'redux-thunk'\n\nlet rootReducers = combineReducers({\n  antrian: antrianReducer,\n  booking: bookingReducer,\n  pelayanan: pelayananReducer,\n  // rincian: rincianReducer,\n  update: updateReducer,\n  sidebarShow: sidebarReducer,\n  sidebarUnfoldable: sidebarUnfoldableReducer,\n  pasien: pasienReducer,\n  teknisi: teknisiReducer,\n  tarif: tarifReducer,\n})\n\nexport const store = createStore(rootReducers, applyMiddleware(thunk))\n","import 'react-app-polyfill/stable'\nimport 'core-js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport '@coreui/coreui/dist/css/coreui.min.css'\nimport './scss/inputDate.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}